//
//  TicketKindViewController.m
//  Ruyicai_iPad
//
//  Created by baozi on 13-6-28.
//  Copyright (c) 2013年 baozi. All rights reserved.
//

#import "TicketKindViewController.h"
//登陆
#import "LoginViewController.h"
//彩票 投注信息
#import "RuYiCaiLotDetail.h"

#define TAG_SSQ_KIND 100
#define BALLRECTWIDTH 42
#define BALLRECTHEIGHT 42
#define BALLLINESPACE 4
#define BALLVERTICALSPACE 4

#define BALLBASETAG 1000

#define NUMBUTTON_VALUE 42
#define NUMBUTTON_LINESPAC 4
#define NUMBUTTON_TAG 1100

#define TAG_NUMBER_BTN 200

#define TAG_TICKET_ALERT 300

@interface TicketKindViewController ()
{
    UIButton *narBarViewButton; //中间导航按钮
    
    UIView *titleSelectView; //玩法选择view
    
    UIView * moreMessageView; //上面信息view
    
    UIView * SSQ_RedBallView; // 双色球 红球区
    
    NSMutableArray *m_red_stateArray;//红球状态表
    NSArray *m_blue_stateArray;// 篮球状态 标示
    
    int red_selectNum;//选择的数目
    int red_selectMaxNum;//最大可选数目
    int red_selectBallCount;//至少应该选择的数目
    UILabel *messLabel;//选球提醒
    
    UIView * numListView;//机选数目设置view
    int red_numSelectValue;//机选 数目
    UIButton *  red_numButton;// 红球数目 按钮
    
    
    RYC_SSQBallView *blueBallView;// 篮球区
    UIScrollView * numGroupScrollView;
    
    UIView *normalBetView;//标准投注 号码篮
    UIScrollView * chaseNumBetView;//追号 号码篮
    UIButton *buyButton; //购买
    UIScrollView * cooperationBetView; //合买 号码篮
    UIView * giveView; //赠送
}
@end

@implementation TicketKindViewController
@synthesize delegate;
@synthesize batchEndTime;
- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization
    }
    return self;
}

- (void)dealloc{
    [super dealloc];
    [narBarViewButton release];
     [titleSelectView release];
    [moreMessageView release];
    [SSQ_RedBallView release];
    
    [blueBallView release];
    [batchEndTime release]; batchEndTime = nil;
    [m_Ball_Direct release];
    [m_Ball_Drag release];
    [stageTableArray release];
    [stageTableView release];
    
    [commisionRation release];
    [openStateArray release];
    [cooDescription release];
}

- (void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(requestComplete:) name:KRequestCompNotName object:nil];
}
- (void)viewWillDisappear:(BOOL)animated
{
    [super viewWillDisappear:animated];
    [[NSNotificationCenter defaultCenter] removeObserver:self name:KRequestCompNotName object:nil];

}
- (void)viewDidLoad
{
    [super viewDidLoad];
    // Do any additional setup after loading the view from its nib.
    
    self.view.backgroundColor = [UIColor grayColor];
    
    [self creatBackBtn];//创建返回 按钮
    
    /// 导航设置
    [self createNarbarView];
    
    //delegate
    NSMutableDictionary *mDict =[[NSMutableDictionary alloc]init];
    [mDict setObject:kLotNoSSQ forKey:@"lotno"];
	[mDict setObject:@"highFrequency" forKey:@"type"];
    [mDict setObject:@"QueryLot" forKey:@"command"];

    [[RYCNetworkManager sharedManager] netRequestStartWith:mDict withRequestType:ASINetworkRequestTypeLeftTime showProgress:NO];
       
    //设置上边信息view
    [self headMessageView];
    
    /* 直选 */
    m_Ball_Direct =[[UIScrollView alloc]initWithFrame:CGRectMake(10, 160, 560, 480)];
    m_Ball_Direct.backgroundColor =[UIColor whiteColor];
    [self.view addSubview:m_Ball_Direct];
    //设置 红球区
    [self setSSQRedBallView];
    //设置 篮球区
    [self setSSQBlueBallView];
    
    /* 胆拖 */
    [self setDragBallView];
   
    
    //设置 选择结果区
    [self setSelectBallResultView];
    
    //设置 号码篮区
    [self setNumberGroupView];
}
#pragma mark ---------- RYCNetManager delegate
- (void)requestComplete:(NSNotification*)notification
{
    NSDictionary* dataDic = (NSDictionary*)notification.userInfo;
    DLog(@"得到数据 -------- %@",dataDic);
    int reqType = [[dataDic objectForKey:KRequestTypeKey] integerValue];
    switch (reqType) {
        case ASINetworkRequestTypeLeftTime:
            [self getBatchCodeOfLot:dataDic];
            break;
        case ASINetworkRequestTypeLaunchLot:
        case ASINetworkRequestTypeSubmitLot:
        {
             [self showAlertWithMessage:KISDictionaryHaveKey(dataDic, @"message")];
        }
            break;
        default:
            break;
    }
}
- (void)getBatchCodeOfLot:(NSDictionary *)parserDict
{
//    DLog(@"parserDict %@",parserDict);
    numberLabel.text = [parserDict objectForKey:@"batchcode"];
    self.batchEndTime = [parserDict objectForKey:@"time_remaining"];//剩余秒数
    int leftTime = [self.batchEndTime intValue];
    [RuYiCaiLotDetail sharedObject].batchEndTime = [parserDict objectForKey:@"time_remaining"];
	if (leftTime > 0)
	{
        int numHour = (int)(leftTime / 3600.0);
        leftTime -= numHour * 3600.0;
	    int numMinute = (int)(leftTime / 60.0);
		leftTime -= numMinute * 60.0;
		int numSecond = (int)(leftTime);
	    thisEndLabel.text = [NSString stringWithFormat:@"%02d:%02d:%02d",
                               numHour, numMinute, numSecond];
    }
    if(m_timer != nil)
	{
		[m_timer invalidate];
		m_timer = nil;
	}
	else
	{
		m_timer = [NSTimer scheduledTimerWithTimeInterval:(1.0) target:self selector:@selector(refreshLeftTime)
												 userInfo:nil repeats:YES];
	}
}
- (void)refreshLeftTime
{
    if (0 == self.batchEndTime.length)
    {
        return;
    }
	thisEndLabel.text = @"00:00:00";
	int leftTime = [self.batchEndTime intValue];
	if (leftTime > 0)
	{
        int numHour = (int)(leftTime / 3600.0);
        leftTime -= numHour * 3600.0;
	    int numMinute = (int)(leftTime / 60.0);
		leftTime -= numMinute * 60.0;
		int numSecond = (int)(leftTime);
	    thisEndLabel.text = [NSString stringWithFormat:@"%02d:%02d:%02d",
                               numHour, numMinute, numSecond];
        self.batchEndTime = [NSString stringWithFormat:@"%d",[self.batchEndTime intValue]-1];
    }
	else if(leftTime == 0)//防止过期彩种
	{
		if([m_timer isValid])
		{
			[m_timer invalidate];
			m_timer = nil;
		}
        [self showAlertWithMessage:[NSString stringWithFormat:@"%@期已截止，投注时请确认您的选择期号",numberLabel.text]];
		
        NSMutableDictionary *mDict =[[NSMutableDictionary alloc]init];
        [mDict setObject:kLotNoSSQ forKey:@"lotno"];
        [mDict setObject:@"highFrequency" forKey:@"type"];
        [mDict setObject:@"QueryLot" forKey:@"command"];
        
        [[RYCNetworkManager sharedManager] netRequestStartWith:mDict withRequestType:ASINetworkRequestTypeLeftTime showProgress:NO];//获取期号
	}
	else //时间为负时，停止调用
	{
		if([m_timer isValid])
		{
			[m_timer invalidate];
			m_timer = nil;
		}
	}
}

#pragma mark ------------- self Create view
/// 导航设置
- (void)createNarbarView
{
    //导航 按钮
    
    
   
    UIImageView *narImage =[[UIImageView alloc]initWithImage:[UIImage imageNamed:@"tabBar_bg.png"]];
    narImage.frame = CGRectMake(0, 0, 930, 60);
    [self.view addSubview:narImage];
    [narImage release];
    
    UIView * narBarView =[[UIView alloc]initWithFrame:CGRectMake(0, 0, self.view.frame.size.width, 80)];
    narBarView.backgroundColor =[UIColor clearColor];
    [self.view addSubview:narBarView];
    [narBarView release];
    narBarViewButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
    narBarViewButton.frame = CGRectMake(narBarView.frame.size.width/2-150, 10, 150, 50);
    [narBarViewButton setTitle:@"双色球-自选" forState:UIControlStateNormal];
    [narBarViewButton addTarget:self action:@selector(narViewTitleButton:) forControlEvents:UIControlEventTouchUpInside];
    [narBarView addSubview:narBarViewButton];
    
    
    UIButton *playButton =[UIButton buttonWithType:UIButtonTypeRoundedRect];
    playButton.frame = CGRectMake(self.view.frame.size.width-200, 10, 100, 50);
    [playButton setTitle:@"玩法" forState:UIControlStateNormal];
    [playButton addTarget:self action:@selector(narBarButtonEvent:) forControlEvents:UIControlEventTouchUpInside];
    [narBarView addSubview:playButton];
    
//    RYNarBarView *narBarV =[[RYNarBarView alloc]initWithFrame:CGRectMake(0, 5, self.view.frame.size.width, 80) withButton:@"双色球-直选"];
//    [narBarV setBarButtonItemWithTitle:@"玩法"];
//    narBarV.delegate = self;
//    [self.view addSubview:narBarV];
//    [narBarV release];
    
    titleSelectView = [[UIView alloc]initWithFrame:CGRectMake(self.view.frame.size.width/2-75, -30, 150, 130)];
    moreMessageView = [[UIView alloc]initWithFrame:CGRectMake(self.view.frame.size.width-150, -150, 150, 130)];
    
}
//创建返回 按钮
- (void)creatBackBtn
{
    UIButton *backBtn = [UIButton buttonWithType:UIButtonTypeRoundedRect];
    backBtn.frame = CGRectMake(10, 100, 100, 50);
    [backBtn setTitle:@"返回" forState:UIControlStateNormal];
    [backBtn addTarget:self action:@selector(backToSuperView) forControlEvents:UIControlEventTouchUpInside];
    [self.view addSubview:backBtn];
}
//消除当前视图
- (void)backToSuperView
{
    [self.delegate  disMissTicketKindViewController:self];
//    [self.view removeFromSuperview];
    
}

- (void)headMessageView
{
    UILabel *countLabel = [[UILabel alloc]initWithFrame:CGRectMake(150, 100, 80, 30)];
    countLabel.text = @"当前期第";
    [self.view addSubview:countLabel];
    countLabel.backgroundColor =[UIColor clearColor];
    [countLabel release];
    
    numberLabel = [[UILabel alloc]initWithFrame:CGRectMake(countLabel.frame.origin.x+countLabel.frame.size.width, 100, 150, 30)];
    numberLabel.textColor = [UIColor redColor];
    numberLabel.text = @"";
    numberLabel.backgroundColor =[UIColor clearColor];
    [self.view addSubview:numberLabel];
    [numberLabel release];
    
    UILabel * countLabel1 =[[UILabel alloc]initWithFrame:CGRectMake(300, 100, 450, 30)];
    countLabel1.text = @"期    每周二、四、日晚开奖,单注最高奖金1000万元！";
    countLabel1.backgroundColor =[UIColor clearColor];
    [self.view addSubview:countLabel1];
    [countLabel1 release];
    
    UILabel *thistimeLabel = [[UILabel alloc]initWithFrame:CGRectMake(150, 130, 150, 30)];
    thistimeLabel.text =@"离截止还剩：" ;
    thistimeLabel.backgroundColor =[UIColor clearColor];
    [self.view addSubview:thistimeLabel];
    [thistimeLabel release];
    
    thisEndLabel =[[UILabel alloc]initWithFrame:CGRectMake(300, 130, 200, 30)];
    thisEndLabel.text = @"1天8时12分50秒";
    thisEndLabel.backgroundColor =[UIColor clearColor];
    thisEndLabel.textColor = [UIColor redColor];
    [self.view addSubview:thisEndLabel];
    [thisEndLabel release];
    
}
#pragma mark -------- SSQ_redBall
- (void)setSSQRedBallView
{
    //红球区 view 创建
    SSQ_RedBallView = [[UIView alloc]initWithFrame:CGRectMake(0, 0, 560, 400)];
//    SSQ_RedBallView.backgroundColor = [UIColor whiteColor];
     [m_Ball_Direct addSubview:SSQ_RedBallView];
    
    //红球 label
    UILabel *redBallTitle = [[UILabel alloc]initWithFrame:CGRectMake(0, 0, 300, 30)];
    redBallTitle.text =  @"红球区（至少选择6个）";
    [SSQ_RedBallView addSubview:redBallTitle];
    [redBallTitle release];
   
    
    //最大可选数
    red_selectMaxNum = 16;
    
    //红球 球区布局
    [self numberOfRedBall:33 withPerLine:12 selectBallCount:6];
    
    int start = 6;
    red_numButton = [[UIButton alloc] initWithFrame:CGRectMake(387, 3, 49, 35)];
    [red_numButton setTitle:[NSString stringWithFormat:@"%d个", start] forState:UIControlStateNormal];
    [red_numButton setBackgroundColor:[UIColor clearColor]];
    [red_numButton setTitleColor:[UIColor blackColor] forState:UIControlStateNormal];
    [red_numButton setBackgroundImage:[UIImage imageNamed: @"random_num_normal.png"] forState:UIControlStateNormal];
    [red_numButton setBackgroundImage: [UIImage imageNamed: @"random_num_click.png"] forState:UIControlStateHighlighted];
    [red_numButton addTarget:self action:@selector(numButtonClick:) forControlEvents:UIControlEventTouchUpInside];
    [SSQ_RedBallView addSubview:red_numButton];
    
    UIButton*  jixuan_button = [[UIButton alloc] initWithFrame:CGRectMake(446, 3, 99, 35)];
    [jixuan_button setTitle:@"机选号码" forState:UIControlStateNormal];
    [jixuan_button setBackgroundColor:[UIColor clearColor]];
    [jixuan_button setTitleColor:[UIColor blackColor] forState:UIControlStateNormal];
    [jixuan_button setBackgroundImage:[UIImage imageNamed:@"random_button_normal.png"] forState:UIControlStateNormal];
    [jixuan_button setBackgroundImage:[UIImage imageNamed:@"random_button_click.png"] forState:UIControlStateHighlighted];
    [jixuan_button addTarget:self action:@selector(jiXuanButtonClick:) forControlEvents:UIControlEventTouchUpInside];
    [SSQ_RedBallView addSubview:jixuan_button];
    [jixuan_button release];
    int num = 11;
    int perLine = 12;
    red_numSelectValue = 6;
//    int lineNum = num/perLine + (num%perLine == 0 ? 0 : 1);
    
    numListView = [[UIView alloc] initWithFrame:CGRectMake(5, 30, 510, 300)];
    [numListView setBackgroundColor:[UIColor clearColor]];
    UIImageView*  bg_image = [[UIImageView alloc] initWithFrame:CGRectMake(0, 0, numListView.frame.size.width, 50)];
     bg_image.image = [UIImage imageNamed:@"randomnum_bg.png"];
    [numListView addSubview:bg_image];
    [bg_image release];
    [SSQ_RedBallView addSubview:numListView];
    
    for (int i = 0; i < num; i++)
    {
        CGRect ballFrame = CGRectMake( 3 + ((NUMBUTTON_VALUE+NUMBUTTON_LINESPAC) * (i % perLine)),
                                      5+(NUMBUTTON_VALUE+NUMBUTTON_LINESPAC)*(i/perLine),
                                      NUMBUTTON_VALUE, NUMBUTTON_VALUE);
        UIButton *button = [[UIButton alloc] initWithFrame:ballFrame];
        [button setBackgroundImage:[UIImage imageNamed: @"num_bg.png"] forState:UIControlStateNormal];
		[button setTitle:[NSString stringWithFormat:@"%d", (i + start)] forState:UIControlStateNormal];
        [button setTitleColor:[UIColor blackColor] forState:UIControlStateNormal];
        button.titleLabel.font = [UIFont boldSystemFontOfSize:15];
		[button addTarget:self action:@selector(pressedNumButton:) forControlEvents:UIControlEventTouchUpInside];
		button.tag = NUMBUTTON_TAG + i;
		[numListView addSubview:button];
        [button release];
    }
    numListView.hidden = YES;
}
- (void)numButtonClick:(id)sender
{
    numListView.hidden = NO;
}
- (void)jiXuanButtonClick:(id)sender
{

    m_red_stateArray = [self randomBallWithMax:33 selectNum:red_numSelectValue];
    [self redBallChangeState:nil];
   
}
- (void)pressedNumButton:(id)sender
{
    UIButton *btn = (UIButton *)sender;
    numListView.hidden = YES;
    red_numSelectValue = btn.tag - NUMBUTTON_TAG +6;
    [red_numButton setTitle:[NSString stringWithFormat:@"%d个", red_numSelectValue] forState:UIControlStateNormal];
    red_selectNum = red_numSelectValue;
    m_red_stateArray = [self randomBallWithMax:33 selectNum:red_numSelectValue];
    [self redBallChangeState:nil];
}

//创建 红球选区
- (void)numberOfRedBall:(int)num  withPerLine:(int)perLine selectBallCount:(int)count
{
    
    m_red_stateArray = [[NSMutableArray alloc]init]; //状态数字初始化
    red_selectBallCount = count;
    red_selectNum = 0;
    for (int i=0; i<num; i++) { // 利用for 循环来 创建红球区
        UIButton * button =[UIButton buttonWithType:UIButtonTypeRoundedRect];
       
        button.frame = CGRectMake(10 + ((BALLRECTWIDTH+BALLVERTICALSPACE) *(i%perLine)), 40 + ((i/perLine)*(BALLRECTHEIGHT+BALLLINESPACE)), BALLRECTWIDTH, BALLRECTHEIGHT);//根据 按钮大小 来排版
        [button setBackgroundImage:[UIImage imageNamed:@"ball_gray.png"] forState:UIControlStateNormal];//默认按钮图片
        [button setTitle:[NSString stringWithFormat:@"%d",i+1] forState:UIControlStateNormal];//显示的数字
        [button setTitleColor:[UIColor blackColor] forState:UIControlStateNormal];//文字颜色
        button.titleLabel.font = [UIFont boldSystemFontOfSize:15];//文字大小
        button.tag = BALLBASETAG + i;//tag 标示
		[button addTarget:self action:@selector(pressedBallButton:) forControlEvents:UIControlEventTouchUpInside];//绑定事件
		
		[SSQ_RedBallView addSubview:button];//加载到视图上
        
        [m_red_stateArray addObject:@"0"];//标示数组添加信息
    }
}
// 红球区 按钮 方法
- (void)pressedBallButton:(id)sender
{
    
    
    UIButton *ballButton = (UIButton *)sender;//取到 点击按钮
    for (int i=0; i<[m_red_stateArray count]; i++) {//遍历 状态数组
        if (ballButton.tag == BALLBASETAG + i) {//判断 为点击按钮
            
            if ([[m_red_stateArray objectAtIndex:i] isEqualToString:@"1"]) {//是否已经为红色状态
                [m_red_stateArray replaceObjectAtIndex:i withObject:@"0"];//改变状态为灰色
                red_selectNum--;//选择数目减少
            }else
            {
                if (red_selectNum < red_selectMaxNum) {//求选择不能超过 最大可选数
                    
                    [m_red_stateArray replaceObjectAtIndex:i withObject:@"1"];//改变状态表示为红色
                    red_selectNum ++;//球数增加
                }
 
            }
        }
    }
    if (messLabel) {//全局变量
        [messLabel release];//释放
//        messLabel = nil;
    }
    messLabel =[[UILabel alloc]initWithFrame:CGRectMake(0, 20, 125, 15)];//实例化 设置左边尺寸
    messLabel.backgroundColor = [UIColor grayColor];//背景颜色
    messLabel.textColor = [UIColor whiteColor];//字体颜色
    messLabel.textAlignment = UITextAlignmentCenter;//居中显示
    messLabel.font = [UIFont systemFontOfSize:12];//字号
    [SSQ_RedBallView addSubview:messLabel];//加到视图上
    if (red_selectMaxNum - red_selectNum ==0) {//判断 是否大于最多显示
        messLabel.text =@"该区不能再选了";//提示信息
    }
    else if (red_selectBallCount - red_selectNum >=0){//判断是否达到最少选球数
        messLabel.text = [NSString stringWithFormat:@"至少还要选 %d 个球",red_selectBallCount - red_selectNum];//提示信息
        
    }else
    {
        messLabel.text = [NSString stringWithFormat:@"最多还可以选 %d 个球",red_selectMaxNum - red_selectNum];//提示信息
    }
    [[self class] cancelPreviousPerformRequestsWithTarget:self selector:@selector(hideMessView) object:nil];//取消该方法的调用
    [self performSelector:@selector(hideMessView) withObject:nil afterDelay:1.0f];//延时消除
    
    [self redBallChangeState:nil];//根据状态表示 改变红球颜色
}
///根据状态表示 改变红球颜色
- (void)redBallChangeState:(NSArray *)stateArray
{
    for (int i = 0; i < [m_red_stateArray count]; i++)//遍历所有红球
    {
        UIButton *tmp = (UIButton *)[SSQ_RedBallView viewWithTag:(BALLBASETAG + i)];//根据tag 确定要修改的按钮
        if ([[m_red_stateArray objectAtIndex:i] isEqualToString:@"1"]) {//根据标示 设置不同的颜色
            [tmp setBackgroundImage:[UIImage imageNamed:@"ball_red.png"] forState:UIControlStateNormal];//换成红色图片
            [tmp setTitleColor:[UIColor whiteColor] forState:UIControlStateNormal];//字体
        }else{
            [tmp setBackgroundImage:[UIImage imageNamed:@"ball_gray.png"] forState:UIControlStateNormal];//灰球
            [tmp setTitleColor:[UIColor blackColor] forState:UIControlStateNormal];//字体颜色
        }
		
        tmp.titleLabel.font = [UIFont boldSystemFontOfSize:15];//字体大小

	}
    [self checkSelectResult];
}
/// 移除 提醒label

- (void)hideMessView
{
    messLabel.hidden=YES;
    [messLabel removeFromSuperview];
}

#pragma mark ----------------- SSQ　blue ball View
- (void)setSSQBlueBallView
{
    blueBallView  =[[RYC_SSQBallView alloc]initWithFrame:CGRectMake(0, 200, 560, 150)];
    blueBallView.delegate = self;
    [blueBallView numberOfRedBall:16 withPerLine:12 selectBallCount:1 kindBall:2 headTitle:@"蓝球区"];
    [blueBallView ballAutoSelectWithStart:1 maxNum:16 perLine:12];
//    [blueBallView ballViewWithMaxNum:16 leastNum:1 perLine:12 kindBall:2 autoStart:1 autoAll:16 headTitle:];
    [m_Ball_Direct addSubview:blueBallView];
}
#pragma mark ----------------- ballView  delegate
- (void)ballSelcetResultArray:(NSMutableArray *)array ballView:(RYC_SSQBallView *)ballView
{
    if (ballView == blueBallView) {
        m_blue_stateArray = [array retain];
        [self checkSelectResult];
        return;
    }
    if (ballView == danmaBallView ) {//胆码
        if ([danmaArray isEqual:array]) {
            return;
        }
        danmaArray = [array retain];
                
        [tuomaBallView  ballViewDifferentNumber:[self numberArrayTuomaDanmaDifferent]];
    }
    if (ballView == tuomaBallView) {//拖码
        if ([tuomaArray isEqual:array]) {
            return;
        }
        tuomaArray =  [array retain];
        [danmaBallView ballViewDifferentNumber:[self numberArrayTuomaDanmaDifferent]];
    }
    if (ballView == dargBlueBallView) {//胆拖 蓝求
        m_blue_stateArray = [array retain];
    }
    [self checkSelectResult];

}
/* 判断 拖码 胆码的数字不重复*/
- (NSMutableArray *)numberArrayTuomaDanmaDifferent
{
    NSMutableArray * numAry = [[NSMutableArray alloc]init];
    NSArray * dArray =[self convertArrayWithStateArray:danmaArray];
    NSArray * tArray = [self convertArrayWithStateArray:tuomaArray];
    DLog(@" dArray %@ tArray%@",dArray,tArray);
    if (dArray.count ==0 || tArray.count == 0) {
        return nil;
    }
    for (int i=0; i<dArray.count; i++) {
        for (int j=0; j<tArray.count; j++) {
            if ([[dArray objectAtIndex:i] isEqual:[tArray objectAtIndex:j]]) {
                [numAry addObject:[dArray objectAtIndex:i]];
            }
        }
    }
    return [numAry autorelease];
}
#pragma mark -----------------  胆拖区
- (void)setDragBallView
{
    m_Ball_Drag =[[UIScrollView alloc]initWithFrame:CGRectMake(10, 160, 560,480)];
    m_Ball_Drag.contentSize = CGSizeMake(560, 600);
    m_Ball_Drag.backgroundColor =[UIColor whiteColor];
    //设置 胆码区
    danmaBallView =[[RYC_SSQBallView alloc]initWithFrame:CGRectMake(0, 0, 560, 200)];
    [danmaBallView numberOfRedBall:33 withPerLine:12 selectBallCount:1 kindBall:1 headTitle:@"胆码区"];
    [danmaBallView ballAutoSelectWithStart:1 maxNum:5 perLine:12];
    danmaBallView.delegate = self;
    [m_Ball_Drag addSubview:danmaBallView];
    danmaArray = [[NSMutableArray alloc]init];
    
    //设置 拖码区
    tuomaBallView =[[RYC_SSQBallView alloc]initWithFrame:CGRectMake(0, 200, 560, 200)];
    [tuomaBallView numberOfRedBall:33 withPerLine:12 selectBallCount:2 kindBall:1 headTitle:@"拖码区"];
    [tuomaBallView ballAutoSelectWithStart:2 maxNum:16 perLine:12];
    tuomaBallView.delegate = self;
    [m_Ball_Drag addSubview:tuomaBallView];
    tuomaArray = [[NSMutableArray alloc]init];
    
    //设置 蓝球区
    dargBlueBallView = [[RYC_SSQBallView alloc]initWithFrame:CGRectMake(0, 400, 560, 150)];
    [dargBlueBallView numberOfRedBall:16 withPerLine:12 selectBallCount:1 kindBall:2 headTitle:@"蓝球区"];
    [dargBlueBallView ballAutoSelectWithStart:1 maxNum:16 perLine:12];
    dargBlueBallView.delegate = self;
    [m_Ball_Drag addSubview:dargBlueBallView];
    
}
#pragma mark ----------------- selectBallResult

#define TAG_SELECT_LABEL 400
- (void)setSelectBallResultView
{
    int grade = 0;
    int payMent = 0;
    UIView * selectBallView =[[UIView alloc]initWithFrame:CGRectMake(10, 650, 550, 200)];
    selectBallView.backgroundColor = [UIColor whiteColor];
    [self.view addSubview:selectBallView];
    [selectBallView release];
    
    UILabel * totalLabel =[[UILabel alloc]initWithFrame:CGRectMake(10, 0, 300, 25)];
    totalLabel.text = [NSString stringWithFormat:@"当前已选择了 %d 注 共%d 元",grade,payMent];
    totalLabel.tag = TAG_SELECT_LABEL;
    [selectBallView addSubview:totalLabel];
    [totalLabel release];
    
    UIButton * afreshButton =[UIButton buttonWithType:UIButtonTypeRoundedRect];
    [afreshButton setTitle:@"重选" forState:UIControlStateNormal];
    afreshButton.frame = CGRectMake(100, 30, 100, 50);
    [afreshButton addTarget:self action:@selector(afreshChooseClicked:) forControlEvents:UIControlEventTouchUpInside];
    [selectBallView addSubview:afreshButton];
    
    UIButton * addToBaskBtn = [UIButton buttonWithType:UIButtonTypeRoundedRect];
    addToBaskBtn.frame = CGRectMake(250, 30, 100, 50);
    [addToBaskBtn setTitle:@"添加到号码篮" forState:UIControlStateNormal];
    [addToBaskBtn addTarget:self action:@selector(addDateToBasket:) forControlEvents:UIControlEventTouchUpInside];
    [selectBallView addSubview:addToBaskBtn];
}
- (void)checkSelectResult
{
    NSArray *red_array =[self convertArrayWithStateArray:m_red_stateArray];
    NSArray *blue_array =[self convertArrayWithStateArray:m_blue_stateArray];
     UILabel * label = (UILabel *)[self.view viewWithTag:400];
    if (red_array.count >=6 && blue_array.count >=1 ) {
        //注数 = zuhe(6,用户选中红球数量) * zuhe(1,用户选中蓝球数量)
      int  m_numZhu = RYCChoose(6, red_array.count) * RYCChoose(1, blue_array.count);
        //金额 = 注数 * 倍数 *（2元）* 期数
      int  m_numCost = m_numZhu * 2;
//        if (m_numZhu>10000) {
//            [self showAlertWithMessage:[NSString stringWithFormat:@"投注注数不超过 %d 注",10000]];
//            [self afreshChooseClicked:nil];
//        }
       
        label.text= [NSString stringWithFormat:@"当前已选择了 %d 注 共%d 元",m_numZhu,m_numCost];
    }else{
        label.text= [NSString stringWithFormat:@"当前已选择了 %d 注 共%d 元",0,0];

    }
    
}
// 重新选择
- (void)afreshChooseClicked:(id)sender
{
    [blueBallView clearBallState];
    [self clearBallState];
    [self checkSelectResult];
}
//添加到号码篮
- (void)addDateToBasket:(id)sender
{
    NSArray *red_array =[self convertArrayWithStateArray:m_red_stateArray];
    NSArray *blue_array =[self convertArrayWithStateArray:m_blue_stateArray];
    if (red_array.count >=6 && blue_array.count >=1 ) {
        NSMutableDictionary * dataDic =[[NSMutableDictionary alloc]init];
        [dataDic setObject: red_array forKey:@"redArray"];
        [dataDic  setObject: blue_array forKey:@"blueArray"];
        
        [m_table_array addObject:dataDic];
        [tableNumberGroup reloadData];
        [self afreshChooseClicked:nil];

    }else{
        [self showAlertWithMessage:@"请至少选一注"];
    }
    [self checkSelectResult];
    [self updateTheALlCostLabel];
}
- (NSArray *)convertArrayWithStateArray:(NSArray *)stateArray
{
    NSMutableArray *newArray =[[NSMutableArray alloc]init];
       for (int i=0; i<stateArray.count; i++) {
        if ([[stateArray objectAtIndex:i]isEqualToString:@"1"]) {
            [newArray addObject:[NSNumber numberWithInt:i+1]];
        }
    }
    return newArray;
}
- (void)clearBallState
{
    for (int i=0; i<m_red_stateArray.count; i++) {
        [m_red_stateArray replaceObjectAtIndex:i withObject:@"0"];
    }
    [self redBallChangeState:nil];
}
#pragma mark ----------------- numbar group 号码篮

- (void)setNumberGroupView
{
    ///购买方式 选择
    CGFloat btnWidth = 70;
    NSArray * groupArray =[[NSArray alloc]initWithObjects:@"投注",@"追号",@"合买",@"赠送", nil];
    for (int i =0; i<groupArray.count; i++) {
        UIButton * betBtn =[UIButton buttonWithType:UIButtonTypeRoundedRect];
        betBtn.frame = CGRectMake(590+btnWidth*i, 160, btnWidth, 30);
        [betBtn setTitle:[groupArray objectAtIndex:i] forState:UIControlStateNormal];
        [betBtn addTarget:self action:@selector(betNumberGroupMothds:) forControlEvents:UIControlEventTouchUpInside];
        betBtn.tag = TAG_NUMBER_BTN + i;
        [self.view addSubview:betBtn];
    }
    
    numGroupScrollView =[[UIScrollView alloc]initWithFrame:CGRectMake(580, 190, 300, 470)];
    numGroupScrollView.contentSize = CGSizeMake(300, 670);
    numGroupScrollView.backgroundColor =[UIColor redColor];
    [self.view addSubview:numGroupScrollView];
    
    /*
     号码篮 显示
     */
    UILabel * basketLabel =[[UILabel alloc]initWithFrame:CGRectMake(0, 0, 100, 30)];
    basketLabel.text = @"号码篮";
    [numGroupScrollView addSubview:basketLabel];
    [basketLabel release];
    
    
     m_table_array = [[NSMutableArray alloc]init];
    // 投注列表
    tableNumberGroup =[[UITableView alloc]initWithFrame:CGRectMake(0,basketLabel.frame.origin.y+ basketLabel.frame.size.height, 280, 200) style:UITableViewStyleGrouped];
    tableNumberGroup.delegate = self;
    tableNumberGroup.dataSource = self;
    [numGroupScrollView addSubview:tableNumberGroup];
    
    //追号
    chaseNumBetView =[[UIScrollView alloc]initWithFrame:CGRectMake(0, tableNumberGroup.frame.origin.y+tableNumberGroup.frame.size.height+10, 340, 450)];
//    chaseNumBetView.contentSize = CGSizeMake(340, 250);
    [self chaseNumberBetViewShow:chaseNumBetView];
    //投注
    normalBetView =[[UIView alloc]initWithFrame:CGRectMake(0, tableNumberGroup.frame.origin.y+tableNumberGroup.frame.size.height+10, 340, 250)];
    [self normalBetViewShowInView:normalBetView];

    // 合买
//    [RuYiCaiLotDetail sharedObject].batchNum =@"1";
    cooperationBetView =[[UIScrollView alloc]initWithFrame:CGRectMake(normalBetView.frame.origin.x, tableNumberGroup.frame.origin.y+tableNumberGroup.frame.size.height+10, 340, 500)];
    cooperationBetView.contentSize = CGSizeMake(340, 500);
    [self cooperationBetViewCreate];
    
    //赠送
    giveView =[[UIView alloc]initWithFrame:CGRectMake(0, tableNumberGroup.frame.origin.y+tableNumberGroup.frame.size.height+10, 340, 300)];
    giveView.backgroundColor =[UIColor whiteColor];
    [self createGiveView];
    /*
     立即购买
     */
    buyButton =[UIButton buttonWithType:UIButtonTypeRoundedRect ];
    buyButton.frame =CGRectMake(1024-350, 768 - 80, 150, 50);
    [buyButton setTitle:@"立即购买" forState:UIControlStateNormal];
    [buyButton addTarget:self action:@selector(immediateBuyButton:) forControlEvents:UIControlEventTouchUpInside];
    [self.view addSubview:buyButton];
    
    int allNumber = 0;
    allCostLabel =[[UILabel alloc]initWithFrame:CGRectMake(buyButton.frame.origin.x -100, buyButton.frame.origin.y - 30, 250, 25)];
    allCostLabel.backgroundColor =[UIColor clearColor];
    allCostLabel.textAlignment = UITextAlignmentCenter;
    allCostLabel.text = [NSString stringWithFormat:@"共 %d 注  总金额: %d 元",allNumber,allNumber*2];
    [self.view addSubview:allCostLabel];

}
/* 修改总金额显示 */
- (void)updateTheALlCostLabel
{
    int amount =0;
    for (int i=0; i<m_table_array.count; i++) {
        NSDictionary *dic =[m_table_array objectAtIndex:i];
       NSArray * r_array =[dic objectForKey:@"redArray"];
       NSArray * b_array =[dic objectForKey:@"blueArray"];
        if ([[RuYiCaiLotDetail sharedObject].batchNum isEqualToString:@"1"] || [[RuYiCaiLotDetail sharedObject].batchNum isEqualToString:@" "]) {
            amount +=RYCChoose(6, r_array.count) * RYCChoose(1, b_array.count)*multipleNum;
 
        }else
        {
            amount +=RYCChoose(6, r_array.count) * RYCChoose(1, b_array.count)*multipleNum*stageNum;

        }
      }
    costAmount = amount*2;
    allCostLabel.text = [NSString stringWithFormat:@"共 %d 注  总金额: %d 元",amount,amount*2];
}
/* 投注 */
- (void)normalBetViewShowInView:(UIView *)normalView
{
    normalBetView.backgroundColor = [UIColor whiteColor];
    [numGroupScrollView addSubview:normalView];
    
    [self multipleShowView:normalView];
}
/*  追号 */
#define TAG_STAGE_SLIDER 403
#define TAG_STAGE_TEXTIELD 404
- (void)chaseNumberBetViewShow:(UIScrollView *)chaseView
{
    
    chaseNumBetView.backgroundColor = [UIColor whiteColor];
    [self multipleShowView:chaseNumBetView];
    
    stageNum = 10;
    UILabel *lalel1 =[[UILabel alloc]initWithFrame:CGRectMake(10, 40, 50, 25)];
    lalel1.text= @"期数";
    [chaseView addSubview:lalel1];
    [lalel1 release];
    
    UISlider *sliderStage =[[UISlider alloc]initWithFrame:CGRectMake(lalel1.frame.size.width+lalel1.frame.origin.x, lalel1.frame.origin.y, 150, 25)];
    sliderStage.minimumValue = 1;
    sliderStage.maximumValue = 200;
    sliderStage.value = stageNum;
    sliderStage.tag = TAG_STAGE_SLIDER;
    [sliderStage addTarget:self action:@selector(mulSliderValueChanged:) forControlEvents:UIControlEventValueChanged];
    [chaseView addSubview:sliderStage];
    [sliderStage release];
    
    UITextField * stageText =[[UITextField alloc]initWithFrame:CGRectMake(sliderStage.frame.origin.x + sliderStage.frame.size.width, lalel1.frame.origin.y, 50, 25)];
    stageText.text = [NSString stringWithFormat:@"%d",stageNum];
    stageText.delegate = self;
    stageText.tag = TAG_STAGE_TEXTIELD;
    stageText.textAlignment =UITextAlignmentCenter;
    stageText.borderStyle = UITextBorderStyleLine;
    [chaseView addSubview:stageText];
    [stageText release];
    
    UILabel * stageLabel =[[UILabel alloc]initWithFrame:CGRectMake(stageText.frame.size.width+stageText.frame.origin.x, stageText.frame.origin.y, 30, 25)];
    stageLabel.text = @"期";
    [chaseView addSubview:stageLabel];
    [stageLabel release];
    
    
    UILabel * stopLabel =[[UILabel alloc]initWithFrame:CGRectMake(10, lalel1.frame.origin.y + 30, 150, 25)];
    stopLabel.text= @"中奖后停止追号";
    [chaseView addSubview:stopLabel];
    [stopLabel release];
    
    UISwitch *stopSwitch =[[UISwitch alloc]initWithFrame:CGRectMake(stopLabel.frame.origin.x + stopLabel.frame.size.width+50, stopLabel.frame.origin.y, 50, 25)];
    stopSwitch.on = YES;
    [stopSwitch  addTarget:self action:@selector(stopSwitchValueChanged:) forControlEvents:UIControlEventValueChanged];
    [chaseView addSubview:stopSwitch];
    [stopSwitch release];
    
    UIButton *openStageButton =[UIButton buttonWithType:UIButtonTypeRoundedRect];
    openStageButton.frame = CGRectMake(10, stopLabel.frame.origin.y +30, 280, 25);
    [openStageButton setTitle:@"设置追期" forState:UIControlStateNormal];
    [chaseView addSubview:openStageButton];
    [openStageButton addTarget:self action:@selector(openStageTabelButton:) forControlEvents:UIControlEventTouchUpInside];
    
#define TAG_STAGE_TABLEVIEW 405
    stageTableArray = [[NSMutableArray alloc]init];
    stageTableView =[[UITableView alloc]initWithFrame:CGRectMake(10, openStageButton.frame.origin.y+30, 280, 300) style:UITableViewStylePlain];
    stageTableView.separatorStyle =  UITableViewCellSeparatorStyleNone;
    stageTableView.delegate = self;
    stageTableView.dataSource = self;
    stageTableView.tag = TAG_STAGE_TABLEVIEW;
    [chaseView addSubview:stageTableView];
    stageTableView.hidden = YES;
    isShowStageTable = YES;
    
    
}
- (void)stopSwitchValueChanged:(id)sender
{
    UISwitch * swith= (UISwitch *)sender;
    if (swith.on) {
        [RuYiCaiLotDetail sharedObject].prizeend = @"1";
    }else{
        [RuYiCaiLotDetail sharedObject].prizeend = @"0";
    }
}
- (void)createGiveView
{
     [self multipleShowView:giveView];
    /*  联系方式 */
    UILabel *contactLabel =[[UILabel alloc]initWithFrame:CGRectMake(10, 40, 200, 50)];
    contactLabel.text = @"朋友联系方式(多个联系人之间用逗号分隔)";
    contactLabel.numberOfLines  = 0;
    [giveView addSubview:contactLabel];
    [contactLabel release];
#define TAG_CONTACT_TEXTVIEW 406
    
    UITextView *contactTextView =[[UITextView alloc]initWithFrame:CGRectMake(contactLabel.frame.origin.x, contactLabel.frame.origin.y +50, 250, 80)];
    contactTextView.font =[UIFont systemFontOfSize:17];
    contactTextView.backgroundColor =[UIColor grayColor];
    contactTextView.delegate = self;
    contactTextView.tag = TAG_CONTACT_TEXTVIEW;
    [giveView addSubview:contactTextView];
    [contactTextView release];
    /* 赠言 */
    UILabel * presLabel =[[UILabel alloc]initWithFrame:CGRectMake(contactTextView.frame.origin.x, contactTextView.frame.origin.y+contactTextView.frame.size.height, 200, 25)];
    presLabel.text = @"您的赠言:(可不填)";
    [giveView addSubview:presLabel];
    [presLabel release];
#define TAG_PTES_TEXTVIEW 407
    UITextView * presTextView =[[UITextView alloc]initWithFrame:CGRectMake(presLabel.frame.origin.x, presLabel.frame.origin.y +30, 250, 100)];
    presTextView.font =[UIFont systemFontOfSize:17];
    presTextView.delegate = self;
    presTextView.tag = TAG_CONTACT_TEXTVIEW;
    presTextView.backgroundColor = [UIColor grayColor];
    [giveView addSubview:presTextView];
    [presTextView release];
   
}
/* 合买 */
- (void)cooperationBetViewCreate
{
    cooperationBetView.backgroundColor = [UIColor whiteColor];
    [self multipleShowView:cooperationBetView];
#define TAG_SUB_TEXTFIELD 409
#define TAG_SUBPER_LABEL 410
    /* 认购 */
    UILabel * subLabel =[[UILabel alloc]initWithFrame:CGRectMake(10, 40, 90, 25)];
    subLabel.text = @"我要认购：";
    [cooperationBetView addSubview:subLabel];
    [subLabel release];
    
    buyAmt = 0;
    
    UITextField *subTextField =[[UITextField alloc]initWithFrame:CGRectMake(subLabel.frame.origin.x + subLabel.frame.size.width, subLabel.frame.origin.y, 50, 25)];
    subTextField.text =[NSString stringWithFormat:@"%d",buyAmt];
    subTextField.tag = TAG_SUB_TEXTFIELD;
    subTextField.delegate = self;
    subTextField.borderStyle = UITextBorderStyleLine;
    [cooperationBetView addSubview:subTextField];
    [subTextField release];
    UILabel *yuanLabel =[[UILabel alloc]initWithFrame:CGRectMake(subTextField.frame.origin.x + subTextField.frame.size.width, subTextField.frame.origin.y, 20, 25)];
    yuanLabel.text = @"元";
    [cooperationBetView addSubview:yuanLabel];
    [yuanLabel release];
    
    UILabel *subPerLabel =[[UILabel alloc]initWithFrame:CGRectMake(subTextField.frame.origin.x + subTextField.frame.size.width+30, subTextField.frame.origin.y, 150, 25)];
    subPerLabel.tag = TAG_SUBPER_LABEL;
    subPerLabel.text = [NSString stringWithFormat:@"占总额%.2f%%",0.0];
    [cooperationBetView addSubview:subPerLabel];
    [subPerLabel release];
#define TAG_DOCUMENT_TEXTFIELD 411
    /* 跟单 */
    UILabel *documentaryLabel =[[UILabel alloc]initWithFrame:CGRectMake(10, subLabel.frame.origin.y + 30, 90, 25)];
    documentaryLabel.text = @"最低跟单:";
    [cooperationBetView addSubview:documentaryLabel];
    [documentaryLabel release];
    minAmt =0;
    UITextField *documentaryTextfField =[[UITextField alloc]initWithFrame:CGRectMake(documentaryLabel.frame.origin.x + documentaryLabel.frame.size.width, documentaryLabel.frame.origin.y, 50, 25)];
    documentaryTextfField.text = [NSString stringWithFormat:@"%d",minAmt];
    documentaryTextfField.delegate = self;
    documentaryTextfField.tag = TAG_DOCUMENT_TEXTFIELD;
    documentaryTextfField.borderStyle = UITextBorderStyleLine;
    [cooperationBetView addSubview:documentaryTextfField];
    [documentaryTextfField release];
    
    UILabel *yuanLabel1 =[[UILabel alloc]initWithFrame:CGRectMake(documentaryTextfField.frame.origin.x + documentaryTextfField.frame.size.width, documentaryTextfField.frame.origin.y, 20, 25)];
    yuanLabel1.text = @"元";
    [cooperationBetView addSubview:yuanLabel1];
    [yuanLabel1 release];
#define TAG_MIN_TEXTIELD 412
#define TAG_MINPER_LABEL 413
    /* 我要保底 */
    UILabel * minLabel =[[UILabel alloc]initWithFrame:CGRectMake(10, documentaryLabel.frame.origin.y+30, 90, 25)];
    minLabel.text =@"我要保底:";
    [cooperationBetView addSubview:minLabel];
    [minLabel release];
    
    safeAmt = 0;
    UITextField * minTextField =[[UITextField alloc]initWithFrame:CGRectMake(minLabel.frame.origin.x + minLabel.frame.size.width, minLabel.frame.origin.y, 50, 25)];
    minTextField.text = [NSString stringWithFormat:@"%d",safeAmt];
    minTextField.borderStyle = UITextBorderStyleLine;
    minTextField.delegate = self;
    minTextField.tag = TAG_MIN_TEXTIELD;
    [cooperationBetView addSubview:minTextField];
    [minTextField release];
    
    UILabel * yuanlabel2 =[[UILabel alloc]initWithFrame:CGRectMake(minTextField.frame.origin.x +minTextField.frame.size.width, minLabel.frame.origin.y, 20, 25)];
    yuanlabel2.text =@"元";
    [cooperationBetView addSubview:yuanlabel2];
    [yuanlabel2 release];
    
    UILabel* minPerLabel =[[UILabel alloc]initWithFrame:CGRectMake(minTextField.frame.origin.x + minTextField.frame.size.width +30, minTextField.frame.origin.y, 150, 25)];
    minPerLabel.text =  [NSString stringWithFormat:@"占总额%.2f%%",0.0];
    minPerLabel.tag = TAG_MINPER_LABEL;
    [cooperationBetView addSubview:minPerLabel];
    [minPerLabel release];
#define TAG_SUMTRUE_BUTTON 414
#define TAG_SUMFALSE_BUTTON 415
    /* 全额保底*/
    UILabel *sumLabel =[[UILabel alloc]initWithFrame:CGRectMake(minLabel.frame.origin.x, minLabel.frame.origin.y+30, 90, 25)];
    sumLabel.text = @"全额保底:";
    [cooperationBetView addSubview:sumLabel];
    [sumLabel release];
    
    UIButton *sumBtnT =[UIButton buttonWithType:UIButtonTypeCustom];
    sumBtnT.frame = CGRectMake(sumLabel.frame.origin.x+sumLabel.frame.size.width, sumLabel.frame.origin.y, 20, 20);
    [sumBtnT setImage:[UIImage imageNamed:@"mode_nomal.png"] forState:UIControlStateNormal];
    [sumBtnT addTarget:self action:@selector(sumButtonClick:) forControlEvents:UIControlEventTouchUpInside];
    sumBtnT.tag =TAG_SUMTRUE_BUTTON;
    [cooperationBetView addSubview:sumBtnT];
    
    UILabel *nanLabel =[[UILabel alloc]initWithFrame:CGRectMake(sumBtnT.frame.origin.x+sumBtnT.frame.size.width, sumBtnT.frame.origin.y, 25, 25)];
    nanLabel.text=@"是";
    nanLabel.backgroundColor =[UIColor clearColor];
    [cooperationBetView addSubview:nanLabel];
    [nanLabel release];
    
    UIButton *sumBtnF =[UIButton buttonWithType:UIButtonTypeCustom];
    sumBtnF.frame = CGRectMake(nanLabel.frame.origin.x+nanLabel.frame.size.width+10, sumLabel.frame.origin.y,20, 20);
     [sumBtnF setImage:[UIImage imageNamed:@"mode_select.png"] forState:UIControlStateNormal];
    [sumBtnF addTarget:self action:@selector(sumButtonClick:) forControlEvents:UIControlEventTouchUpInside];
    sumBtnF.tag = TAG_SUMFALSE_BUTTON;
    [cooperationBetView addSubview:sumBtnF];
    
    UILabel *wenLabel =[[UILabel alloc]initWithFrame:CGRectMake(sumBtnF.frame.origin.x+sumBtnF.frame.size.width, sumBtnF.frame.origin.y, 25, 25)];
    wenLabel.text=@"否";
    wenLabel.backgroundColor =[UIColor clearColor];
    [cooperationBetView addSubview:wenLabel];
    [wenLabel release];
#define TAG_DEDUCT_BUTTON 408
    /* 我的提成 */
    UILabel *deductLabel =[[UILabel alloc]initWithFrame:CGRectMake(sumLabel.frame.origin.x, sumLabel.frame.origin.y+30, sumLabel.frame.size.width, 25)];
    deductLabel.text =@"我的提成";
    [cooperationBetView addSubview:deductLabel];
    [deductLabel release];
    commisionRation =[[NSString alloc]init];
    commisionRation = @"10";
    
    UIButton *deductButton =[UIButton buttonWithType:UIButtonTypeRoundedRect];
    deductButton.frame = CGRectMake(deductLabel.frame.origin.x + deductLabel.frame.size.width, deductLabel.frame.origin.y, 100, 25);
    deductButton.tag = TAG_DEDUCT_BUTTON;
    [deductButton addTarget:self action:@selector(deductButtonClicked:) forControlEvents:UIControlEventTouchUpInside];
    [deductButton setTitle:commisionRation forState:UIControlStateNormal];
    [cooperationBetView addSubview:deductButton];
    
    UILabel * perLabel =[[UILabel alloc]initWithFrame:CGRectMake(deductButton.frame.origin.x+deductButton.frame.size.width, deductButton.frame.origin.y, 20, 25)];
    perLabel.text = @"%%";
    [cooperationBetView addSubview:perLabel];
    [perLabel release];
    
    /* 是否公开 */
    UILabel *openLabel =[[UILabel alloc]initWithFrame:CGRectMake(deductLabel.frame.origin.x, deductLabel.frame.origin.y+30, deductLabel.frame.size.width, 25)];
    openLabel.text = @"是否公开:";
    [cooperationBetView addSubview:openLabel];
    [openLabel release];
#define TAG_OPEN_BUTTON 500
    NSArray * openArr =[[NSArray alloc]initWithObjects:@"对所有人公开",@"对跟单这立即公开",@"对所有人截止后公开",@"对跟单者截止后公开",@"保密", nil];
    openStateArray =[[NSMutableArray alloc]initWithObjects:@"1",@"0",@"0",@"0",@"0",nil];
    
    for (int i= 0; i<openArr.count;i++) {
        
        UIButton * openButton =[UIButton buttonWithType:UIButtonTypeRoundedRect];
        openButton.frame = CGRectMake(openLabel.frame.origin.x + openLabel.frame.size.width, openLabel.frame.origin.y +10+(30*i), 20, 20);
        if ([[openStateArray objectAtIndex:i]isEqualToString:@"1"]) {
            [openButton setImage:[UIImage imageNamed:@"mode_select.png"] forState:UIControlStateNormal];
        }else{
           [openButton setImage:[UIImage imageNamed:@"mode_nomal.png"] forState:UIControlStateNormal]; 
        }
        openButton.tag = TAG_OPEN_BUTTON +i;
        [openButton addTarget:self action:@selector(openButtonClick:) forControlEvents:UIControlEventTouchUpInside];
        [cooperationBetView addSubview:openButton];
        
        UILabel *arrLabel =[[UILabel alloc]initWithFrame:CGRectMake(openButton.frame.origin.x + openButton.frame.size.width, openButton.frame.origin.y, 200, 25)];
        arrLabel.text = [openArr objectAtIndex:i];
        [cooperationBetView addSubview:arrLabel];
        [arrLabel release];
    }
#define TAG_DES_TEXTVIEW 416
    /*  方案描述  */
    cooDescription =[[NSString alloc]init];
    UILabel * desLabel =[[UILabel alloc]initWithFrame:CGRectMake(openLabel.frame.origin.x, openLabel.frame.origin.y + 30*5, openLabel.frame.size.width, 25)];
    desLabel.text =@"方案描述";
    [cooperationBetView addSubview:desLabel];
    [desLabel release];
    
    UITextView *desTextView =[[UITextView alloc]initWithFrame:CGRectMake(desLabel.frame.origin.x + desLabel.frame.size.width, desLabel.frame.origin.y, 150, 60)];
    desTextView.font=[UIFont systemFontOfSize:17];
    desTextView.backgroundColor =[UIColor grayColor];
    desTextView.tag = TAG_DES_TEXTVIEW;
    desTextView.delegate = self;
    [cooperationBetView addSubview:desTextView];
    [desTextView release];
}
/* 公开程度 */
- (void)openButtonClick:(id)sender
{
    UIButton * btn= (UIButton*)sender;
    int count = openStateArray.count;
    [openStateArray removeAllObjects];
    for (int i=0; i<count; i++) {
        if (btn.tag - TAG_OPEN_BUTTON ==i) {
        [openStateArray addObject: @"1"];
        }else{
        [openStateArray addObject:@"0"];
        }
    }
    for (int i=0; i<count; i++) {
        UIButton * button =(UIButton *)[self.view viewWithTag:TAG_OPEN_BUTTON+i];
        if ([[openStateArray objectAtIndex:i]isEqualToString:@"1"]) {
            [button setImage:[UIImage imageNamed:@"mode_select.png"] forState:UIControlStateNormal];
        }else{
            [button setImage:[UIImage imageNamed:@"mode_nomal.png"] forState:UIControlStateNormal];
            
        }
    }
}
/* 全额保底 */
- (void)sumButtonClick:(id)sender
{
    UIButton *btn=(UIButton *)sender;
    UIButton *btnTrue = (UIButton *)[self.view viewWithTag:TAG_SUMTRUE_BUTTON];
    UIButton *btnFalse = (UIButton *)[self.view viewWithTag:TAG_SUMFALSE_BUTTON];
    if (TAG_SUMTRUE_BUTTON == btn.tag) {
        [btnTrue setImage:[UIImage imageNamed:@"mode_select.png"] forState:UIControlStateNormal];
        [btnFalse setImage:[UIImage imageNamed:@"mode_nomal.png"] forState:UIControlStateNormal];
        [self minimumMessageRefresh:[NSString stringWithFormat:@"%d",costAmount-buyAmt]];
    }else{
        [btnTrue setImage:[UIImage imageNamed:@"mode_nomal.png"] forState:UIControlStateNormal];
        [btnFalse setImage:[UIImage imageNamed:@"mode_select.png"] forState:UIControlStateNormal];
        [self minimumMessageRefresh:[NSString stringWithFormat:@"%d",1]];

    }
}
/* 我的提成比例调整 */
- (void)deductButtonClicked:(id)sender
{
    UIButton * btn= (UIButton *)sender;
    CGRect rect =numGroupScrollView.frame;
    rect.origin.y -=100;

    
    [numGroupScrollView setContentOffset:CGPointMake(0, 110) animated:YES];
    PickerViewController * viewController =[[PickerViewController alloc]init];
    viewController.delegate = self;
    
    NSArray * array =[[NSArray alloc]initWithObjects:@"1",@"2",@"3",@"4",@"5",@"6",@"7",@"8",@"9",@"10" ,nil];
    UIPopoverController *popover =[[UIPopoverController alloc]initWithContentViewController:viewController];
    popover.popoverContentSize = CGSizeMake(300, 300);
    [popover presentPopoverFromRect:CGRectMake(680, 480, btn.frame.size.width, btn.frame.size.height) inView:self.view permittedArrowDirections:UIPopoverArrowDirectionUp animated:YES];
    [viewController setPickerViewDataArray:array selectNum:1];


}
#pragma mark --------- pickerView
- (void)pickerViewController:(PickerViewController *)viewController selectRowNum:(NSString *)selectRow
{
    DLog(@"%@",selectRow);
    UIButton * btn=(UIButton *)[self.view viewWithTag:TAG_DEDUCT_BUTTON];
    [btn setTitle:selectRow forState:UIControlStateNormal];
    commisionRation = selectRow;
}
#define MAX_MUL_SLIDER 200
#define TAG_TICKET_MULTEXTFIELD 401
#define TAG_TICKET_MULSLIDER 402
/* 倍数调整 */
- (void)multipleShowView:(UIView *)view
{
     multipleNum =10;
    /*
     倍数调整
     */
    UILabel *mulLabel =[[UILabel alloc]initWithFrame:CGRectMake(10, 10, 50, 25)];
    mulLabel.text = @"倍数";
    mulLabel.backgroundColor = [UIColor clearColor];
    [view addSubview:mulLabel];
    [mulLabel release];
    
    UISlider *mulSlider =[[UISlider alloc]initWithFrame:CGRectMake(mulLabel.frame.size.width+10, mulLabel.frame.origin.y, 150, 25)];
    mulSlider.minimumValue = 1;
    mulSlider.maximumValue = MAX_MUL_SLIDER;
    mulSlider.tag = TAG_TICKET_MULSLIDER;
    [mulSlider addTarget:self action:@selector(mulSliderValueChanged:) forControlEvents:UIControlEventValueChanged];
    mulSlider.value = multipleNum;
    [view addSubview:mulSlider];
    [mulSlider release];
    
    UITextField *mulTextField =[[UITextField alloc]initWithFrame:CGRectMake(mulSlider.frame.origin.x + mulSlider.frame.size.width, mulLabel.frame.origin.y, 50, 25)];
    mulTextField.text = [NSString stringWithFormat:@"%d",multipleNum];
    mulTextField.delegate = self;
    mulTextField.tag = TAG_TICKET_MULTEXTFIELD;
    mulTextField.textAlignment =UITextAlignmentCenter;
    mulTextField.borderStyle = UITextBorderStyleLine;
    [view addSubview:mulTextField];
    [mulTextField release];
    
    UILabel * lastLabel =[[UILabel alloc]initWithFrame:CGRectMake(mulTextField.frame.size.width+mulTextField.frame.origin.x, mulLabel.frame.origin.y, 30, 25)];
    lastLabel.backgroundColor =[UIColor clearColor];
    lastLabel.text = @"倍";
    [view addSubview:lastLabel];
    [lastLabel release];

}
//滑动条 slider 事件方法
- (void)mulSliderValueChanged:(id)sender
{
    UISlider * slider =(UISlider *)sender;
    if (slider.tag == TAG_TICKET_MULSLIDER) {
        multipleNum = slider.value;
        UITextField * textfield =(UITextField *)[self.view viewWithTag:TAG_TICKET_MULTEXTFIELD];
        textfield.text = [NSString stringWithFormat:@"%d",multipleNum];
    }else if (slider.tag == TAG_STAGE_SLIDER){
        stageNum = slider.value;
        UITextField *textField= (UITextField *)[self.view viewWithTag:TAG_STAGE_TEXTIELD];
        textField.text = [NSString stringWithFormat:@"%d",stageNum];
    }
    [self updateTheALlCostLabel];
}
// 投注 合买 追号
- (void)betNumberGroupMothds:(id)sender
{
    UIView * view= numGroupScrollView;
    UIButton * betBtn = (UIButton *)sender;
    [RuYiCaiLotDetail sharedObject].betType = @"bet";
    [RuYiCaiLotDetail sharedObject].batchNum = @"1";
    [buyButton setTitle:@"立即购买" forState:UIControlStateNormal];
    switch (betBtn.tag - TAG_NUMBER_BTN) {
        case 0://投注
        {
            [giveView removeFromSuperview];
            [chaseNumBetView removeFromSuperview];
            [cooperationBetView removeFromSuperview];
            [view addSubview:normalBetView];
        }
            break;
        case 1://追号
        {
            [giveView removeFromSuperview];
            [cooperationBetView removeFromSuperview];
            [normalBetView removeFromSuperview];
            [view addSubview:chaseNumBetView];
            [RuYiCaiLotDetail sharedObject].batchNum =[NSString stringWithFormat:@"%d",stageNum];
        }
            break;
        case 2://合买
        {
            [giveView removeFromSuperview];
            [normalBetView removeFromSuperview];
            [chaseNumBetView removeFromSuperview];
            [view addSubview:cooperationBetView];
            [RuYiCaiLotDetail sharedObject].betType = @"startcase";
            [buyButton setTitle:@"发起合买" forState:UIControlStateNormal];
        }
            break;
        case 3://赠送
        {
            [cooperationBetView removeFromSuperview];
            [normalBetView removeFromSuperview];
            [chaseNumBetView removeFromSuperview];
            [view addSubview:giveView];
            [buyButton setTitle:@"立即赠送" forState:UIControlStateNormal];
            [RuYiCaiLotDetail sharedObject].betType = @"gift";
        }
            break;
        default:
            break;
    }
    [self updateTheALlCostLabel];
}
//打开期号设置
- (void)openStageTabelButton:(id)sender
{
    if (isShowStageTable) {
        isShowStageTable = NO;
        stageTableView.hidden = NO;
        int  nowStageNum = [numberLabel.text intValue];
        for (int i=0; i<stageNum; i++) {
            [stageTableArray addObject:[NSString stringWithFormat:@"%d",nowStageNum+i]];
        }
        [stageTableView reloadData];
        
    }else{
        isShowStageTable =YES;
        stageTableView.hidden = YES;
        [stageTableArray removeAllObjects];
        [stageTableView reloadData];
    }
   
}
// 立即购买
- (void)immediateBuyButton:(id)sender
{
    if (m_table_array.count >0) {
        
        if ([self isSuccessLogin]) {
            UIAlertView * alert =[[UIAlertView alloc]initWithTitle:@"订单确认" message:@"确认支付本次投注的彩票？" delegate:self cancelButtonTitle:@"取消" otherButtonTitles:@"确认支付", nil];
            alert.tag = TAG_TICKET_ALERT;
            [alert show];
            [alert release];
            
           
        }else
        {
            LoginViewController *login =[[LoginViewController alloc]init];
            [self presentModalViewController:login animated:YES];
            [login release];
        }
        
    }else{
        [self showAlertWithMessage:@"请至少选择一注进行投注"];
    }
    
    
}

//
- (NSString *)betCodeStringWith:(NSArray*)blueArray redArray:(NSArray *)redArray 
{
    NSString * betCode = [[NSString alloc]initWithFormat:@""];
    int nRedCount = 0;
    int nBlueCount = 0;
    nRedCount = [redArray count];
    nBlueCount = [blueArray count];
    if (nRedCount > 6 && nBlueCount > 1)  //复式
        betCode = [betCode stringByAppendingString:@"3001*"];
    else if (nRedCount > 6)  //红复式，篮球等于1
        betCode = [betCode stringByAppendingString:@"1001*"];
    else if (nBlueCount > 1)  //蓝复式
        betCode = [betCode stringByAppendingString:@"2001*"];
    else  //单式
        betCode = [betCode stringByAppendingString:@"0001"];
    
    for (int i = 0; i < nRedCount; i++)
    {
        int nValue = [[redArray objectAtIndex:i] intValue];
        betCode = [betCode stringByAppendingFormat:@"%02d", nValue];
    }
    betCode = [betCode stringByAppendingFormat:@"~"];
    for (int i = 0; i < nBlueCount; i++)
    {
        int nValue = [[blueArray objectAtIndex:i] intValue];
        betCode = [betCode stringByAppendingFormat:@"%02d", nValue];
    }
     betCode = [betCode stringByAppendingFormat:@"^"];
    int  m_numZhu = RYCChoose(6, nRedCount) * RYCChoose(1, nBlueCount);
    int m_numCost = m_numZhu ;
    betCode = [betCode stringByAppendingFormat:@"_1_200_%d",m_numCost*200];
    return [betCode autorelease];
}
#pragma mark ---------------- UITextView delegate
- (void)textViewDidBeginEditing:(UITextView *)textView
{
    
}
- (void)textViewDidEndEditing:(UITextView *)textView
{
  
        if (textView.tag == TAG_PTES_TEXTVIEW)
        {
            [RuYiCaiLotDetail sharedObject].advice = textView.text;
        }else if (TAG_CONTACT_TEXTVIEW == textView.tag)
        {
            [RuYiCaiLotDetail sharedObject].toMobileCode = textView.text;
        }else
        {
            cooDescription = textView.text;
        }
   
}
/*手机号码验证 MODIFIED BY HELENSONG*/
- (BOOL) validateMobile:(NSString* )mobile {
    //手机号以13， 15，18开头，八个 \d 数字字符
    NSString *phoneRegex = @"^((13[0-9])|(15[^4,\\D])|(18[0,0-9]))\\d{8}$";
    NSPredicate *phoneTest = [NSPredicate predicateWithFormat:@"SELF MATCHES %@",phoneRegex];
//    NSLog(@"phoneTest is %@",phoneTest);
    return [phoneTest evaluateWithObject:mobile];
}
#pragma mark ----------------- uitextField delegate 
- (BOOL)textFieldShouldBeginEditing:(UITextField *)textField
{
    if (textField.tag == TAG_TICKET_MULTEXTFIELD ||textField.tag == TAG_STAGE_TEXTIELD) {
       
        [numGroupScrollView setContentOffset:CGPointMake(0, 200) animated:YES];
        
    }else if (textField.tag == TAG_SUB_TEXTFIELD || TAG_DOCUMENT_TEXTFIELD ==textField.tag)
    {
        [numGroupScrollView setContentOffset:CGPointMake(0, 200) animated:YES];
    }else if (TAG_MIN_TEXTIELD == textField.tag){
        [numGroupScrollView setContentOffset:CGPointMake(0, 230) animated:YES];

    }

//        if (){
//        [numGroupScrollView setContentOffset:CGPointMake(0, 200) animated:YES];
//
//    }
    return YES;
}
- (BOOL)textFieldShouldEndEditing:(UITextField *)textField
{
   /*  判断是否为数字 */
    for (int i = 0; i < textField.text.length; i++)
    {
        UniChar chr = [textField.text characterAtIndex:i];
        if ('0' == chr && 0 == i)
            {
                [self showAlertWithMessage:@"不能以0开头"];
                textField.text = @"1";
            }
        else if (chr < '0' || chr > '9')
            {
                [self showAlertWithMessage:@"必须为数字"];
                textField.text = @"1";
            }
    }
    /* 认购 */
    if (TAG_SUB_TEXTFIELD == textField.tag) {
        buyAmt =[textField.text intValue] ;
        if (buyAmt >=costAmount &&costAmount>0) {
            buyAmt = costAmount;
            textField.text = [NSString stringWithFormat:@"%d",buyAmt];
        }
        UILabel *label = (UILabel *)[self.view viewWithTag:TAG_SUBPER_LABEL];
        CGFloat  per = buyAmt *1.0 / costAmount;
       label.text =[NSString stringWithFormat:@"占总额%.2f%%",per*100 ];
    }
    /* 最近跟单 */
    if (TAG_DOCUMENT_TEXTFIELD == textField.tag) {
        minAmt =[textField.text intValue];
        if (minAmt>=costAmount-buyAmt &&costAmount-buyAmt>0) {
            minAmt =costAmount-buyAmt;
            textField.text = [NSString stringWithFormat:@"%d",minAmt];
        }
    }
    /* 我要保底 */
    if (TAG_MIN_TEXTIELD ==textField.tag) {
        
        [self minimumMessageRefresh:textField.text];
        
    }
    /*  范围 */
    if (TAG_TICKET_MULTEXTFIELD ==textField.tag ||TAG_STAGE_TEXTIELD == textField.tag) {

        if([textField.text intValue] <= 0 || [textField.text intValue] > 200)
        {
            
            [self showAlertWithMessage: @"最高的范围为1～200" ];
            textField.text = @"1";
        }

    }
    if (TAG_TICKET_MULTEXTFIELD ==textField.tag) {
       
        
        UISlider *slider = (UISlider *)[self.view viewWithTag:TAG_TICKET_MULSLIDER];
        slider.value = [textField.text intValue];
        
    }else if (TAG_STAGE_TEXTIELD == textField.tag)
    {
        UISlider *slider = (UISlider *)[self.view viewWithTag:TAG_STAGE_SLIDER];
        slider.value = [textField.text intValue];
    }
    [self updateTheALlCostLabel];
    return YES;
}
- (void)minimumMessageRefresh:(NSString *)minString
{
    UITextField * textField = (UITextField *)[self.view viewWithTag:TAG_MIN_TEXTIELD];
    safeAmt = [minString intValue];
    if (safeAmt>=costAmount - buyAmt &&costAmount - buyAmt>0) {
        safeAmt= costAmount - buyAmt;
       
    }
     textField.text =[NSString stringWithFormat:@"%d",safeAmt];
    UILabel * label= (UILabel*)[self.view viewWithTag:TAG_MINPER_LABEL];
    label.text = [NSString stringWithFormat:@"占总额%.2f%%",(safeAmt*1.0/costAmount)*100];
}
- (BOOL)textFieldShouldReturn:(UITextField *)textField
{
    return YES;
}
- (void)touchesBegan:(NSSet *)touches withEvent:(UIEvent *)event
{
    UITextField * textField = (UITextField *)[self.view viewWithTag:TAG_TICKET_MULTEXTFIELD];
    [textField resignFirstResponder];
}
#pragma mark ------------ alert View delegate
- (void)alertView:(UIAlertView *)alertView clickedButtonAtIndex:(NSInteger)buttonIndex
{
   
    if (alertView.tag == TAG_TICKET_ALERT) {
        if (buttonIndex == 1) {
            if ([[RuYiCaiLotDetail sharedObject].batchNum isEqualToString:@""]) {
                [RuYiCaiLotDetail sharedObject].batchNum = @"1";
            }
            
            NSString * betCode =[[NSString alloc]init];
            NSArray * b_array = nil;
            NSArray * r_array = nil;
            int amount = 0;
            for (int i=0; i<m_table_array.count; i++) {
                NSDictionary *dic =[m_table_array objectAtIndex:i];
                r_array =[dic objectForKey:@"redArray"];
                b_array =[dic objectForKey:@"blueArray"];
                betCode = [betCode stringByAppendingString:[self betCodeStringWith:b_array redArray:r_array]];
                if (i+1<m_table_array.count) {
                     betCode =[betCode stringByAppendingFormat:@"!"];
                }
                if ([[RuYiCaiLotDetail sharedObject].batchNum isEqualToString:@"1"] || [[RuYiCaiLotDetail sharedObject].batchNum isEqualToString:@" "]) {
                amount +=RYCChoose(6, r_array.count) * RYCChoose(1, b_array.count)*200*multipleNum;
                }else{
                amount +=RYCChoose(6, r_array.count) * RYCChoose(1, b_array.count)*200*multipleNum*stageNum;
   
                }
            }
            NSMutableDictionary *mDict =[[NSMutableDictionary alloc]init];
            [mDict setObject:@"betLot" forKey:@"command"];
            [mDict setObject:[UserLoginData sharedManager].userNo forKey:@"userno"];
            
            if ([[RuYiCaiLotDetail sharedObject].betType isEqualToString:@"gift"]) {
                if ([RuYiCaiLotDetail sharedObject].toMobileCode.length ==0) {
                    [self showAlertWithMessage:@"赠送号码不能为空"];
                }
            }
            [mDict setObject:betCode forKey:@"bet_code"];

            if ([[RuYiCaiLotDetail sharedObject].batchNum isEqualToString:@"1"]) {
                [mDict setObject:@"1" forKey:@"batchnum"];
            }else{
                [mDict setObject:[NSString stringWithFormat:@"%d",stageNum] forKey:@"batchnum"];
            }
            [mDict setObject:numberLabel.text forKey:@"batchcode"];
            [mDict setObject:kLotNoSSQ forKey:@"lotno"];
            [mDict setObject:[NSString stringWithFormat:@"%d",multipleNum] forKey:@"lotmulti"];
            [mDict setObject:[NSString stringWithFormat:@"%d",amount] forKey:@"amount"];
            [mDict setObject:[RuYiCaiLotDetail sharedObject].betType forKey:@"bettype"];
            if ([[RuYiCaiLotDetail sharedObject].betType isEqualToString:@""]) {
                [mDict setObject:@"bet" forKey:@"bettype"];
            }
            if ([[RuYiCaiLotDetail sharedObject].prizeend isEqualToString:@""]) {
                 [mDict setObject:@"1" forKey:@"prizeend"];
            }
            [mDict setObject:@"200" forKey:@"oneAmount"];
            if ([[RuYiCaiLotDetail sharedObject].betType isEqualToString:@"gift"])
            {
                [mDict setObject:[RuYiCaiLotDetail sharedObject].toMobileCode forKey:@"to_mobile_code"];
                if([RuYiCaiLotDetail sharedObject].advice.length != 0)
                    [mDict setObject:[RuYiCaiLotDetail sharedObject].advice forKey:@"blessing"];
            }
            [mDict setObject:@"1" forKey:@"isSellWays"];
            /* 发起合买 */
            if ([[RuYiCaiLotDetail sharedObject].betType isEqualToString:@"startcase"]) {
                NSMutableDictionary *tempDic =[[NSMutableDictionary alloc]init];
                [tempDic setObject:[NSString stringWithFormat:@"%d", amount] forKey:@"totalAmt"];
                [tempDic setObject:[NSString stringWithFormat:@"%d",safeAmt] forKey:@"safeAmt"];
                [tempDic setObject:[NSString stringWithFormat:@"%d",buyAmt] forKey:@"buyAmt"];
                [tempDic setObject:[NSString stringWithFormat:@"%d",minAmt] forKey:@"minAmt"];
                [tempDic setObject:cooDescription forKey:@"description"];
                [tempDic setObject:commisionRation forKey:@"commisionRation"];//提成
                [tempDic setObject:@"1" forKey:@"isSellWays"];//多注投格式
                [tempDic setObject:@"betLot" forKey:@"command"];
                [tempDic setObject:[UserLoginData sharedManager].userNo forKey:@"userno"];
                [tempDic setObject:@"startcase" forKey:@"bettype"];
                int isPublic=0;
                for (int i=0;i<openStateArray.count;i++) {
                    if ([[openStateArray objectAtIndex:i] isEqualToString:@"1"]) {
                        isPublic =i;
                        break;
                    }
                }
                int visible = 0;
                switch (isPublic)
                {
                    case 0:
                        visible = 0;
                        break;
                    case 1:
                        visible = 3;
                        break;
                    case 2:
                        visible = 2;
                        break;
                    case 3:
                        visible = 4;
                        break;
                    case 4:
                        visible = 1;
                        break;
                    default:
                        break;
                }
                [tempDic setObject:[NSString stringWithFormat:@"%d",visible] forKey:@"visibility"];//是否公开
            
                [[RYCNetworkManager sharedManager] netRequestStartWith:tempDic withRequestType:ASINetworkRequestTypeLaunchLot showProgress:YES];
            }else{
                [[RYCNetworkManager sharedManager] netRequestStartWith:mDict withRequestType:ASINetworkRequestTypeSubmitLot showProgress:YES];
            }
        }
        
    }
}
#pragma mark --------------  table number group  delegate
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    if (tableView.tag == TAG_STAGE_TABLEVIEW) {
      return   stageTableArray.count;
    }
        
    if (m_table_array.count == 0) {
        return 0;
    }
    return m_table_array.count;
    
    
}
- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (tableView.tag ==TAG_STAGE_TABLEVIEW) {
        return 30;
    }
    return 50;
}
- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    static NSString *celled =@"celled";
    UITableViewCell *cell =nil;
    if (tableView.tag == TAG_STAGE_TABLEVIEW) {
        BatchCodeCell *cell = (BatchCodeCell*)[tableView dequeueReusableCellWithIdentifier:celled];
        if (cell == nil) {
            cell =[[BatchCodeCell alloc]initWithStyle:UITableViewCellStyleDefault reuseIdentifier:celled];
        }
        cell.stageStr = [stageTableArray objectAtIndex:indexPath.row];
        [cell refreshCellView];
        cell.backgroundColor = [UIColor clearColor];
        cell.accessoryType = UITableViewCellAccessoryNone;
        cell.selectionStyle = UITableViewCellSelectionStyleNone;
        return cell;
    }else{
        MoreBetListTabelViewCell * cell = (MoreBetListTabelViewCell *)[tableView dequeueReusableCellWithIdentifier:celled];
        if (cell == nil) {
            cell =[[MoreBetListTabelViewCell alloc]initWithStyle:UITableViewCellStyleDefault reuseIdentifier:celled];
        }
        cell.messDic = [m_table_array objectAtIndex:indexPath.row];
        [cell refreshCellView];
        cell.backgroundColor = [UIColor clearColor];
        cell.accessoryType = UITableViewCellAccessoryNone;
        cell.selectionStyle = UITableViewCellSelectionStyleNone;
        return cell;

    }
   
    return cell;


}

- (UITableViewCellEditingStyle)tableView:(UITableView *)tableView editingStyleForRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (tableView.tag == TAG_STAGE_TABLEVIEW) {
        return UITableViewCellEditingStyleNone;
    }
    return UITableViewCellEditingStyleDelete;
}
//修改删除按钮的文字
-(NSString *)tableView:(UITableView *)tableView titleForDeleteConfirmationButtonForRowAtIndexPath:(NSIndexPath *)indexPath {
    if (tableView.tag == TAG_STAGE_TABLEVIEW) {
        return nil;
    }
    return @"删除";
}
- (void)tableView:(UITableView *)tableView commitEditingStyle:(UITableViewCellEditingStyle)editingStyle forRowAtIndexPath:(NSIndexPath *)indexPath
{
    //删除
    if (editingStyle == UITableViewCellEditingStyleDelete)
	{
        [m_table_array removeObjectAtIndex:indexPath.row];       
        [tableView reloadData];
        [self updateTheALlCostLabel];
    }
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath;
{
    [tableView deselectRowAtIndexPath:indexPath animated:YES];
}
#pragma mark -------------- narBarView delegate
//中间按钮
- (void)narViewTitleButton:(id)sender
{
    UIButton *btn = (UIButton *)sender;
    narBarViewButton = btn;
    narBarViewButton.userInteractionEnabled = NO;
    
    titleSelectView.frame = CGRectMake(self.view.frame.size.width/2-95, -30, 150, 130);
    titleSelectView.backgroundColor = [UIColor grayColor];
    UIButton *firstButton =[UIButton buttonWithType:UIButtonTypeRoundedRect];
    firstButton.frame = CGRectMake(0, 20, 150, 50);
    [firstButton setTitle:@"双色球 - 直选"forState:UIControlStateNormal];
    firstButton.tag = TAG_SSQ_KIND +1;
    [firstButton addTarget:self action:@selector(selectTitleButton:) forControlEvents:UIControlEventTouchUpInside];
    [titleSelectView addSubview:firstButton];
    
    UIButton *secondButton =[UIButton buttonWithType:UIButtonTypeRoundedRect];
    secondButton.frame = CGRectMake(0, 70, 150, 50);
    secondButton.tag = TAG_SSQ_KIND + 2;
    [secondButton setTitle:@"双色球 - 拖胆" forState:UIControlStateNormal];
    [secondButton addTarget:self action:@selector(selectTitleButton:) forControlEvents:UIControlEventTouchUpInside];
    [titleSelectView addSubview:secondButton];
    
    [self showTitleSelectView];
   
    
}
bool isShow = YES;
// 右边按钮
#define TAG_NARBAR_BUTTON 550
- (void)narBarButtonEvent:(id)sender 
{
    moreMessageView.frame= CGRectMake(self.view.frame.size.width-150, -150, 150, 130);
    moreMessageView.backgroundColor = [UIColor whiteColor];
    [self.view addSubview:moreMessageView];
    
    NSArray * narArray =[[NSArray alloc]initWithObjects:@"玩法介绍",@"历史开奖", nil];
    for (int i=0; i<narArray.count; i++) {
        UIButton * playBtn = [ UIButton buttonWithType:UIButtonTypeRoundedRect];
        playBtn.frame = CGRectMake(0, 10+(50*i), 150, 50);
        [playBtn setTitle:[narArray objectAtIndex:i] forState:UIControlStateNormal];
        playBtn.tag = TAG_NARBAR_BUTTON + i;
        [playBtn addTarget:self action:@selector(moreMessageViewButton:) forControlEvents:UIControlEventTouchUpInside];
        [moreMessageView addSubview:playBtn];
 
    }
    
    [UIView beginAnimations:@"showmoreMessage" context:nil];
    //设定动画持续时间
    [UIView setAnimationDuration:.5];
    [UIView  setAnimationCurve:UIViewAnimationCurveEaseInOut];
    //动画的内容
    if (isShow) {
        isShow = NO;
        moreMessageView.frame = CGRectMake(self.view.frame.size.width-150, 100, 150, 130);
    }else{
        isShow = YES;
        moreMessageView.frame= CGRectMake(self.view.frame.size.width-150, -150, 150, 130);

    }
    
    
    //动画结束
    [UIView commitAnimations];
}
//玩法介绍
- (void)moreMessageViewButton:(id)sender
{
    isShow = YES;
    [moreMessageView removeFromSuperview];
    PlayIntroduceViewController *introduce =[[PlayIntroduceViewController alloc]init];
    introduce.delegate = self;
    introduce.view.frame = CGRectMake(400, 0, 530, self.view.frame.size.height);
    [self.view addSubview:introduce.view];
    CATransition *transition = [CATransition animation];
    transition.duration = .5;
    transition.timingFunction = [CAMediaTimingFunction functionWithName:kCAMediaTimingFunctionEaseInEaseOut];
    transition.type = kCATransitionPush;//{ kCATransitionPush, kCATransitionMoveIn, kCATransitionReveal, kCATransitionFade }
    transition.subtype = kCATransitionFromRight;//{ kCATransitionFromRight, kCATransitionFromLeft, kCATransitionFromTop, kCATransitionFromBottom }
    [introduce.view.layer addAnimation:transition forKey:nil];
   
}
#pragma mark ------------ playIntroduce
- (void)playIntroduceViewDisappear:(PlayIntroduceViewController *)viewController
{
    [viewController.view removeFromSuperview];
    [viewController release];
}
//显示玩法选择view
- (void)showTitleSelectView
{
    [UIView beginAnimations:@"showTitleView" context:nil];
    //设定动画持续时间
    [UIView setAnimationDuration:.5];
    [UIView  setAnimationCurve:UIViewAnimationCurveEaseInOut];
    //动画的内容
    titleSelectView.frame = CGRectMake(self.view.frame.size.width/2-100 , 100, 150, 130);
    [self.view addSubview:titleSelectView];
    //动画结束
    [UIView commitAnimations];
}
// 隐藏玩法选择view
- (void)hiddenTitleSelectView
{
    [UIView beginAnimations:@"hinddenSelectView" context:nil];
    //设定动画持续时间
    [UIView setAnimationDuration:.5];
    [UIView  setAnimationCurve:UIViewAnimationCurveEaseInOut];
    //动画的内容
    titleSelectView.frame = CGRectMake(self.view.frame.size.width/2-75, -30, 150, 130);
    [titleSelectView removeFromSuperview];
    //动画结束
    [UIView commitAnimations];
    
}
//玩法选择 
- (void)selectTitleButton:(id)sender 
{
    UIButton * selectBtn = (UIButton *)sender;
    if (selectBtn.tag - TAG_SSQ_KIND == 1) {// 双色球直选
        [narBarViewButton setTitle:@"双色球 - 直选" forState:UIControlStateNormal];
        [m_Ball_Drag removeFromSuperview];
        [self.view addSubview: m_Ball_Direct];
    }else
    {
        [narBarViewButton setTitle:@"双色球 - 拖胆" forState:UIControlStateNormal];
        [m_Ball_Direct removeFromSuperview];
        [self.view addSubview:m_Ball_Drag];
        
    }
    [self hiddenTitleSelectView];
    narBarViewButton.userInteractionEnabled = YES;
}

- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

@end
